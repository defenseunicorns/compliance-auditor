lula-version: ">=v0.2.0"
metadata:
  name: Validate pods with label foo=bar
  uuid: 661c4376-6c1b-4975-9102-1bb2ad75b4cb
domain:
  type: kubernetes
  kubernetes-spec:
    resources:
      - name: podsvt
        resource-rule:
          version: v1
          resource: pods
          namespaces: [validation-test]
provider:
  type: opa
  opa-spec:
    rego: |
      package validate

      import future.keywords.every

      validate {
        every pod in input.podsvt {
          podLabel := pod.metadata.labels.foo
          podLabel == "bar"
        }
      }
---
lula-version: ">= v0.1.0"
metadata:
  name: Kyverno validate pods with label foo=bar
  uuid: 1ab3e3a7-a1e8-40f7-beee-98f74939d1c1
domain:
  type: kubernetes
  kubernetes-spec:
    resources:
      - name: podsvt # Identifier for use in the rego below
        resource-rule: # Mandatory, resource selection criteria, at least one resource rule is required
          version: v1 # Version of resource
          resource: pods # Resource type
          namespaces: [validation-test] # Namespaces to validate the above resources in. Empty or "" for all namespaces or non-namespaced resources
provider:
  type: kyverno
  kyverno-spec:
    policy:
      apiVersion: json.kyverno.io/v1alpha1
      kind: ValidatingPolicy
      metadata:
        name: labels
      spec:
        rules:
          - name: foo-label-exists
            assert:
              all:
                - check:
                    ~.podsvt:
                      metadata:
                        labels:
                          foo: bar
