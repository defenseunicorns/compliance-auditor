# add the descriptions inline
component-definition:
  uuid: E6A291A4-2BC8-43A0-B4B2-FD67CAAE1F8F
  metadata:
    title: OSCAL Demo Tool
    last-modified: "2022-09-13T12:00:00Z"
    version: "20220913"
    oscal-version: 1.1.1
    parties:
      # Should be consistent across all of the packages, but where is ground truth?
      - uuid: C18F4A9F-A402-415B-8D13-B51739D689FF
        type: organization
        name: Defense Unicorns
        links:
          - href: https://github.com/defenseunicorns/lula
            rel: website
  components:
    - uuid: A9D5204C-7E5B-4C43-BD49-34DF759B9F04
      type: software
      title: lula
      description: |
        Defense Unicorns lula
      purpose: Validate compliance controls
      responsible-roles:
        - role-id: provider
          party-uuids:
            - C18F4A9F-A402-415B-8D13-B51739D689FF # matches parties entry for Defense Unicorns
      control-implementations:
        - uuid: A584FEDC-8CEA-4B0C-9F07-85C2C4AE751A
          source: https://github.com/defenseunicorns/lula # Link to generic security document
          description: Validate generic security requirements
          implemented-requirements:
            - uuid: 42C2FFDC-5F05-44DF-A67F-EEC8660AEFFD
              control-id: ID-1
              description: >-
                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, 
                quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum 
                dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
              links:
                # - href: 'file://./validation.yaml'
                #   rel: lula
                #   text: Test creation of resources (currently broken due to YAML Delimiter)
                - href: '#bfca025a-b92e-467c-8350-56cb10eb5575'
                  rel: lula
                  text: Test creation of resources local
  back-matter: 
    resources:
    - uuid: bfca025a-b92e-467c-8350-56cb10eb5575
      description: |
        domain: 
          type: kubernetes
          kubernetes-spec:
            create-resources:
            - name: successPods
              namespace: validation-test
              manifest: |
                apiVersion: v1
                kind: Pod
                metadata:
                  name: success-1
                  namespace: validation-test
                spec:
                  containers:
                  - name: test-container
                    image: nginx
                ---
                apiVersion: v1
                kind: Pod
                metadata:
                  name: success-2
                  namespace: validation-test
                spec:
                  containers:
                  - name: test-container
                    image: nginx
            - name: failPods
              namespace: secure-ns
              manifest: |
                apiVersion: v1
                kind: Pod
                metadata:
                  name: fail-1
                  namespace: secure-ns
                spec:
                  containers:
                  - name: test-container
                    image: nginx
                    securityContext:
                      privileged: true
                ---
                apiVersion: v1
                kind: Pod
                metadata:
                  name: fail-2
                  namespace: secure-ns
                spec:
                  containers:
                  - name: test-container
                    image: nginx
                  securityContext:
                    runAsUser: 0
            - name: netpolTestJob
              namespace: another-ns
              manifest: |
                apiVersion: batch/v1
                kind: Job
                metadata:
                  name: test-job
                  namespace: another-ns
                spec:
                  template:
                    spec:
                      containers:
                      - name: test-container
                        image: nginx
                        command: ["curl", "http://fake-service:80"]
                      restartPolicy: Never
            - name: remotePod
              namespace: validation-test
              file: 'file:../pod-label/pod.pass.yaml'
        provider: 
          type: opa
          opa-spec:
            rego: |
              package validate
              
              default validate = false
              validate {
                check_success_pods
                check_fail_pods
                check_netpol_test_job
                check_remote_pod
              }

              # Check if successPods were created
              check_success_pods {
                success_pod_names := { pod.metadata.name | pod := input.successPods[_]; pod.kind == "Pod" }
                count({"success-1", "success-2"}-success_pod_names) == 0
              }

              # Check that failPods were not created
              check_fail_pods {
                fail_pod_names := { pod.metadata.name | pod := input.failPods[_]; pod.kind == "Pod" }
                count({"fail-1", "fail-2"}-fail_pod_names) == 2
              }

              # Check the netpolTestJob didn't run successfully
              check_netpol_test_job {
                input.netpolTestJob[_].status.failed > 0
              }

              # Check the remotePod was created
              check_remote_pod {
                remote_pod_names := { pod.metadata.name | pod := input.remotePod[_]; pod.kind == "Pod" }
                count({"test-pod-label"}-remote_pod_names) == 0
              }