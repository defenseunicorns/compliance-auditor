# add the descriptions inline
component-definition:
  uuid: E6A291A4-2BC8-43A0-B4B2-FD67CAAE1F8F
  metadata:
    title: OSCAL Demo Tool
    last-modified: '2022-09-13T12:00:00Z'
    version: "20220913"
    oscal-version: 1.1.1
    parties:
      # Should be consistent across all of the packages, but where is ground truth?
    - uuid: C18F4A9F-A402-415B-8D13-B51739D689FF
      type: organization
      name: Defense Unicorns
      links:
      - href: <https://github.com/defenseunicorns/lula>
        rel: website
  components:
  - uuid: A9D5204C-7E5B-4C43-BD49-34DF759B9F04
    type: software
    title: lula
    description: |
      Defense Unicorns lula
    purpose: Validate compliance controls
    responsible-roles:
    - role-id: provider
      party-uuids:
        - C18F4A9F-A402-415B-8D13-B51739D689FF # matches parties entry for Defense Unicorns
    control-implementations:
    - uuid: A584FEDC-8CEA-4B0C-9F07-85C2C4AE751A
      source: # Link to generic security document
      description:
        Validate generic security requirements
      implemented-requirements:
      - uuid: 42C2FFDC-5F05-44DF-A67F-EEC8660AEFFD
        control-id: ID-1
        description: Test
        links:
        - href: '#17c5f855-4f7b-4545-aa1c-cd01f416c290'
          rel: reference
          text: Lula Validation
      - uuid: 18800e54-517b-4078-85c4-847e4977b82c
        control-id: ID-2
        description: Test
        links:
        - href: '#67993bda-95e2-431e-8384-0cf34dd7ce49'
          rel: reference
          text: Lula Validation
  back-matter: 
    resources:
    - uuid: 17c5f855-4f7b-4545-aa1c-cd01f416c290
      title: Lula Validation
      remarks: >-
        Validate that outputs in are tied to the validation evaluation and post to remarks
      description: >-
        domain: 
          type: kubernetes
          kubernetes-spec:
            resources:
            - name: podsvt
              resource-rule:
                version: v1
                resource: pods
                namespaces: [validation-test]
        provider: 
          type: opa
          opa-spec:
            rego: |
              package validate

              import future.keywords.every

              result {
                every pod in input.podsvt {
                  podLabel := pod.metadata.labels.foo
                  podLabel == "bar"
                }
              }
              test := "hello world"
            output:
              validation: validate.result
              observations:
              - validate.test
    - uuid: 67993bda-95e2-431e-8384-0cf34dd7ce49
      title: Lula Validation
      remarks: >-
        Validate that bad outputs are handled and result in not satisfied result
      description: >-
        domain: 
          type: kubernetes
          kubernetes-spec:
            resources:
            - name: podsvt
              resource-rule:
                version: v1
                resource: pods
                namespaces: [validation-test]
        provider:
          type: opa
          opa-spec:
            rego: |
              package validate

              validate := "random string"
              test := false
            output:
              validation: validate.validate
              observations:
              - validate.test
              - validate.missing