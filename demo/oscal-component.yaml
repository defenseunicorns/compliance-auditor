# add the descriptions inline
component-definition:
  uuid: E6A291A4-2BC8-43A0-B4B2-FD67CAAE1F8F
  metadata:
    title: OSCAL Demo Tool
    last-modified: '2022-09-13T12:00:00Z'
    version: "20220913"
    oscal-version: 1.1.1
    parties:
      # Should be consistent across all of the packages, but where is ground truth?
    - uuid: C18F4A9F-A402-415B-8D13-B51739D689FF
      type: organization
      name: Defense Unicorns
      links:
      - href: https://github.com/defenseunicorns/lula
        rel: website
  components:
  - uuid: A9D5204C-7E5B-4C43-BD49-34DF759B9F04
    type: software
    title: lula
    description: |
      Defense Unicorns lula
    purpose: Validate compliance controls
    responsible-roles:
    - role-id: provider
      party-uuids:
        - C18F4A9F-A402-415B-8D13-B51739D689FF # matches parties entry for Defense Unicorns
    control-implementations:
    - uuid: A584FEDC-8CEA-4B0C-9F07-85C2C4AE751A
      source: https://raw.githubusercontent.com/usnistgov/oscal-content/master/nist.gov/SP800-53/rev5/json/NIST_SP-800-53_rev5_catalog.json
      description:
        Validate generic security requirements
      implemented-requirements:
      - uuid: 42C2FFDC-5F05-44DF-A67F-EEC8660AEFFD
        control-id: ID-1
        description: >-
          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, 
          quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum 
          dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
        links:
          - href: '#a7377430-2328-4dc4-a9e2-b3f31dc1dff9'
            rel: reference
            text: Lula Validation
  back-matter: 
    resources:
    - uuid: a7377430-2328-4dc4-a9e2-b3f31dc1dff9
      title: Lula Validation
      rlinks:
        - href: lula.dev
      description: >-
        target:
          provider: opa
          domain: kubernetes
          payload:
            resources:
            - name: podsvt       # Identifier for use in the rego below
              resourceRule:       # Mandatory, resource selection criteria, at least one resource rule is required
                Group:            # empty or "" for core group
                Version: v1       # Version of resource
                Resource: pods    # Resource type
                Namespaces: [validation-test]  # Namespaces to validate the above resources in. Empty or "" for all namespaces or non-namespaced resources
            rego: |
              package validate

              import future.keywords.every

              validate {
                every pod in input.podsvt {
                  podLabel := pod.metadata.labels.foo
                  podLabel == "bar"
                }
              }